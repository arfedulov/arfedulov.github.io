!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.COLOR_THEMES={DEFAULT:{background:"#FFFFFF",tetrominos:["#D9E5D6","#5FAD56","#FFA630","#F15946","#254E70"]}},e.BOARD_SIZES={width:15,height:25},e.BLOCK_SIZE=30,e.GAP_SIZE=1,e.KEYBOARD_KEYS_SETTINGS={RIGHT:["ArrowRight","d"],LEFT:["ArrowLeft","a"],DOWN:["ArrowDown","s"],ROTATE:["ArrowUp","w"],PAUSE:["Escape","p"],STOP:["CustomStop"],PLAY:["CustomPlay"]},e.DOM_ELEMENT_IDS={CANVAS_ELEMENT:"canvas"}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),r(2).loadGame()},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n,o=r(3),i=r(4),a=r(0),s=r(6),u=r(0),l=r(7),c=r(8),f={x:Math.floor(a.BOARD_SIZES.width/2),y:-3},y=function(){function t(){var t=this;this.status="stopped",this.colorTheme=u.COLOR_THEMES.DEFAULT,this.step=function(e){t.execMovementListeners(),e-t.lastGameCycle>800&&"running"===t.status&&(t.lastGameCycle=e,t.cycle()),t.tetromino?t.renderer.render(t.tetromino,t.board):t.renderer.render(t.board),"running"===t.status&&window.requestAnimationFrame(t.step)},this.setupControlsListeners(),this.renderer=c.getRenderer(),this.controls=s.getControls(),this.board=o.getBoard(),this.spawnTetromino(),this.lastGameCycle=performance.now(),l.screens.displayStartScreen()}return t.prototype.setupControlsListeners=function(){var t=this;window.addEventListener("keyup",(function(e){var r=e.key;u.KEYBOARD_KEYS_SETTINGS.PLAY.includes(r)&&t.play(),u.KEYBOARD_KEYS_SETTINGS.STOP.includes(r)&&t.stop(),u.KEYBOARD_KEYS_SETTINGS.PAUSE.includes(r)&&t.pause()}))},t.prototype.run=function(){this.status="running",window.requestAnimationFrame(this.step)},t.prototype.pause=function(){"running"===this.status&&(this.status="paused",l.screens.displayPauseScreen())},t.prototype.play=function(){l.screens.hideAll(),this.run()},t.prototype.stop=function(){this.status="stopped",this.resetGame(),l.screens.displayStartScreen()},t.prototype.resetGame=function(){this.board.clear(),this.renderer.clear(),this.spawnTetromino()},t.prototype.spawnTetromino=function(){this.tetromino=i.createTetromino(f,this.colorTheme.tetrominos,this.board)},t.prototype.cycle=function(){this.tetromino&&this.tetromino.isStuck()&&(this.board.addElements(this.tetromino.getElements()),this.spawnTetromino()),this.moveTetrominoDown(),this.destroyFullRows(),this.isGameOver()&&this.stop()},t.prototype.execMovementListeners=function(){this.tetromino&&(this.controls.left&&this.tetromino.moveLeft(),this.controls.right&&this.tetromino.moveRight(),this.controls.down&&this.tetromino.moveDown(),this.controls.rotate&&this.tetromino.rotate())},t.prototype.isGameOver=function(){return this.tetromino&&this.tetromino.isStuck()&&this.tetromino.isOutOfBoard()},t.prototype.destroyFullRows=function(){for(var t=this.board.getRowToDestroy();void 0!==t;)this.board.destroyRow(t),t=this.board.getRowToDestroy()},t.prototype.moveTetrominoDown=function(){this.tetromino&&!this.tetromino.isStuck()&&this.tetromino.moveDown()},t}();e.loadGame=function(){n||(n=new y)}},function(t,e,r){"use strict";var n=this&&this.__read||function(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,o,i=r.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(n=i.next()).done;)a.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return a},o=this&&this.__values||function(t){var e="function"==typeof Symbol&&Symbol.iterator,r=e&&t[e],n=0;if(r)return r.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(e,"__esModule",{value:!0});var i,a=r(0),s=function(t){return t.x+","+t.y},u=function(t){var e=n(t.split(",").map(Number),2);return{x:e[0],y:e[1]}},l=function(){function t(){this.table=new Map}return t.prototype.addElements=function(t){var e,r;try{for(var n=o(t),i=n.next();!i.done;i=n.next()){var a=i.value,u=a.x,l=a.y,c=s({x:u,y:l});if(this.table.has(c))throw Error("The position ("+u+", "+l+") on the board is not empty");this.table.set(c,a)}}catch(t){e={error:t}}finally{try{i&&!i.done&&(r=n.return)&&r.call(n)}finally{if(e)throw e.error}}},t.prototype.destroyRowAndMoveDown=function(t){this.destroyRow(t),this.moveAllDown(t)},t.prototype.isPositionEmpty=function(t){return!this.table.has(s(t))},t.prototype.getElements=function(){return this.table.values()},t.prototype.getFirstFullRow=function(){var t,e,r=Array.from(this.table.keys()).sort((function(t,e){return u(t).y-u(e).y})),i=0,s=n(r,1)[0];try{for(var l=o(r),c=l.next();!c.done;c=l.next()){var f=c.value,y=u(f).y;if(y===u(s).y?i+=1:i=1,s=f,i>=a.BOARD_SIZES.width)return y}}catch(e){t={error:e}}finally{try{c&&!c.done&&(e=l.return)&&e.call(l)}finally{if(t)throw t.error}}},t.prototype.moveAllDown=function(t){var e=this,r=Array.from(this.table.keys()).filter((function(e){return u(e).y<t})),n=r.map((function(t){return e.table.get(t)}));r.forEach((function(t){e.table.delete(t)})),n.forEach((function(t){t.y+=1,e.table.set(s(t),t)}))},t.prototype.destroyRow=function(t){var e=this;Array.from(this.table.keys()).filter((function(e){return u(e).y===t})).forEach((function(t){e.table.delete(t)}))},t}(),c=function(){function t(){this.elements=new l}return t.prototype.clear=function(){this.elements=new l},t.prototype.addElements=function(t){this.elements.addElements(t)},t.prototype.getElements=function(){return this.elements.getElements()},t.prototype.isPositionFilled=function(t){return!this.elements.isPositionEmpty(t)},t.prototype.isPositionInsideBoardOrAbove=function(t){var e=t.x,r=t.y,n=a.BOARD_SIZES.width,o=a.BOARD_SIZES.height;return e>=0&&e<=n-1&&r<=o-1},t.prototype.destroyRow=function(t){this.elements.destroyRowAndMoveDown(t)},t.prototype.getRowToDestroy=function(){return this.elements.getFirstFullRow()},t}();e.getBoard=function(){return i||(i=new c),i}},function(t,e,r){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)},o=this&&this.__values||function(t){var e="function"==typeof Symbol&&Symbol.iterator,r=e&&t[e],n=0;if(r)return r.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,o,i=r.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(n=i.next()).done;)a.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return a},a=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(i(arguments[e]));return t};Object.defineProperty(e,"__esModule",{value:!0});var s=r(5),u=r(0),l=[function(t,e){var r=t.x,n=t.y;return[{x:r-2,y:n,color:e},{x:r-1,y:n,color:e},{x:r-0,y:n,color:e},{x:r+1,y:n,color:e}]},function(t,e){var r=t.x,n=t.y;return[{x:r-1,y:n,color:e},{x:r-0,y:n,color:e},{x:r-1,y:n+1,color:e},{x:r-0,y:n+1,color:e}]},function(t,e){var r=t.x,n=t.y;return[{x:r-0,y:n-1,color:e},{x:r-0,y:n-0,color:e},{x:r-0,y:n+1,color:e},{x:r+1,y:n+1,color:e}]},function(t,e){var r=t.x,n=t.y;return[{x:r-1,y:n-1,color:e},{x:r-1,y:n-0,color:e},{x:r-0,y:n-0,color:e},{x:r-0,y:n+1,color:e}]},function(t,e){var r=t.x,n=t.y;return[{x:r-1,y:n-0,color:e},{x:r-0,y:n-0,color:e},{x:r+1,y:n-0,color:e},{x:r-0,y:n+1,color:e}]}],c={down:{tx:0,ty:1},left:{tx:-1,ty:0},right:{tx:1,ty:0}},f=function(){function t(t){var e=t.initialPosition,r=t.color,o=t.initialRotation,i=t.board,a=t.type;this.pivot=n({},e),this.board=i,this.stuck=!1,this.elements=l[a](e,r),this.applyRotation(o)}return t.prototype.isStuck=function(){return this.stuck},t.prototype.isOutOfBoard=function(){var t,e;try{for(var r=o(this.elements),n=r.next();!n.done;n=r.next()){if(n.value.y<0)return!0}}catch(e){t={error:e}}finally{try{n&&!n.done&&(e=r.return)&&e.call(r)}finally{if(t)throw t.error}}return!1},t.prototype.getElements=function(){return a(this.elements)},t.prototype.moveRight=function(){this.move("right")},t.prototype.moveLeft=function(){this.move("left")},t.prototype.moveDown=function(){this.move("down")},t.prototype.rotate=function(){var t=Math.PI/2;this.canRotate(t)&&this.applyRotation(t)},t.prototype.canRotate=function(t){var e,r;try{for(var n=o(this.elements),i=n.next();!i.done;i=n.next()){var a=i.value,l=a.x,c=a.y,f=s.computeRotatedPoint({x:l,y:c},this.pivot,t);if(!(f.x>=0&&f.x<u.BOARD_SIZES.width&&f.y<u.BOARD_SIZES.height))return!1}}catch(t){e={error:t}}finally{try{i&&!i.done&&(r=n.return)&&r.call(n)}finally{if(e)throw e.error}}return!0},t.prototype.applyRotation=function(t){var e=this;this.elements=this.elements.map((function(r){var o=r.x,i=r.y,a=s.computeRotatedPoint({x:o,y:i},e.pivot,t);return n(n({},r),a)}))},t.prototype.getMovedElements=function(t){return this.elements.map((function(e){var r=e.x,o=e.y,i=c[t],a=i.tx,u=i.ty,l=s.computeTranslatedPoint({x:r,y:o},a,u);return n(n({},e),l)}))},t.prototype.getMovedPivot=function(t){var e=c[t],r=e.tx,n=e.ty;return s.computeTranslatedPoint(this.pivot,r,n)},t.prototype.canMove=function(t){var e,r,n=this.getMovedElements(t);try{for(var i=o(n),a=i.next();!a.done;a=i.next()){var s=a.value,u=s.x,l=s.y;if(!this.board.isPositionInsideBoardOrAbove({x:u,y:l})||this.board.isPositionFilled({x:u,y:l}))return!1}}catch(t){e={error:t}}finally{try{a&&!a.done&&(r=i.return)&&r.call(i)}finally{if(e)throw e.error}}return!0},t.prototype.move=function(t){this.canMove(t)?(this.elements=this.getMovedElements(t),this.pivot=this.getMovedPivot(t)):"down"===t&&(this.stuck=!0)},t}(),y=[0,1,2,3,4];e.createTetromino=function(t,e,r){var n,o=function(t){return t[Math.floor(Math.random()*t.length)]}(e),i=(n=[0,Math.PI/2,Math.PI,-Math.PI/2])[Math.floor(Math.random()*n.length)],a=y[Math.floor(Math.random()*y.length)];return new f({type:a,initialPosition:t,initialRotation:i,color:o,board:r})}},function(t,e,r){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)},o=this&&this.__read||function(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,o,i=r.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(n=i.next()).done;)a.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return a},i=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(o(arguments[e]));return t};Object.defineProperty(e,"__esModule",{value:!0});var a=function(t,e){return{a:t.a*e.a+t.c*e.b,c:t.a*e.c+t.c*e.d,e:t.a*e.e+t.c*e.f+t.e,b:t.b*e.a+t.d*e.b,d:t.b*e.c+t.d*e.d,f:t.b*e.e+t.d*e.f+t.f}},s=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];switch(t.length){case 0:throw new Error("no matrices provided");case 1:return t[0];case 2:return a(t[0],t[1]);default:var r=o(t),n=r[0],u=r[1],l=r.slice(2),c=a(n,u);return s.apply(void 0,i([c],l))}},u=function(t,e){return{a:1,c:0,e:t,b:0,d:1,f:e}},l=function(t,e){return{x:t.a*e.x+t.c*e.y+t.e,y:t.b*e.x+t.d*e.y+t.f}};e.computeRotatedPoint=function(t,e,r){var o=function(t,e,r){var n=Math.cos(t),o=Math.sin(t),i={a:n,c:-o,e:0,b:o,d:n,f:0};return void 0===e||void 0===r?i:s(u(e,r),i,u(-e,-r))}(r,e.x,e.y),i=l(o,n({},t));return{x:Math.round(i.x),y:Math.round(i.y)}},e.computeTranslatedPoint=function(t,e,r){var o=u(e,r),i=l(o,n({},t));return{x:Math.round(i.x),y:Math.round(i.y)}}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n,o=r(0),i=function(){function t(){var t=this;this.buttons={right:!1,left:!1,down:!1,rotate:!1},this.onButtonPress=function(e){var r="keydown"===e.type;!function(t){return o.KEYBOARD_KEYS_SETTINGS.LEFT.includes(t.key)}(e)?!function(t){return o.KEYBOARD_KEYS_SETTINGS.RIGHT.includes(t.key)}(e)?!function(t){return o.KEYBOARD_KEYS_SETTINGS.DOWN.includes(t.key)}(e)?function(t){return o.KEYBOARD_KEYS_SETTINGS.ROTATE.includes(t.key)}(e)&&(t.buttons.rotate=r):t.buttons.down=r:t.buttons.right=r:t.buttons.left=r},window.addEventListener("keydown",this.onButtonPress),window.addEventListener("keyup",this.onButtonPress)}return Object.defineProperty(t.prototype,"right",{get:function(){var t=this.buttons.right;return this.buttons.right=!1,t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"left",{get:function(){var t=this.buttons.left;return this.buttons.left=!1,t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"down",{get:function(){var t=this.buttons.down;return this.buttons.down=!1,t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rotate",{get:function(){var t=this.buttons.rotate;return this.buttons.rotate=!1,t},enumerable:!0,configurable:!0}),t}();e.getControls=function(){return n||(n=new i),n}},function(t,e,r){"use strict";var n=this&&this.__read||function(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,o,i=r.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(n=i.next()).done;)a.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(e,"__esModule",{value:!0});var o=r(0),i=n(["start-screen","pause-screen","play-btn","continue-btn","restart-btn"].map((function(t){var e=document.getElementById(t);if(!e)throw Error(t+" element is not found");return e})),5),a=i[0],s=i[1],u=i[2],l=i[3],c=i[4],f=function(t){var e=new KeyboardEvent("keyup",{key:t});window.dispatchEvent(e)};u.addEventListener("click",(function(){var t=n(o.KEYBOARD_KEYS_SETTINGS.PLAY,1)[0];f(t)})),l.addEventListener("click",(function(){var t=n(o.KEYBOARD_KEYS_SETTINGS.PLAY,1)[0];f(t)})),c.addEventListener("click",(function(){var t=n(o.KEYBOARD_KEYS_SETTINGS.STOP,1)[0];f(t)}));var y=function(t){t.style.display="block"},h=function(t){t.style.display="none"};e.screens={displayStartScreen:function(){h(s),y(a)},displayPauseScreen:function(){h(a),y(s)},hideAll:function(){[a,s].forEach(h)}}},function(t,e,r){"use strict";var n=this&&this.__values||function(t){var e="function"==typeof Symbol&&Symbol.iterator,r=e&&t[e],n=0;if(r)return r.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(e,"__esModule",{value:!0});var o,i=r(0),a=function(t){return t*i.BLOCK_SIZE},s=function(t,e){var r=e.x,n=e.y,o=e.color;t.fillStyle=o,t.fillRect(a(r)+i.GAP_SIZE,a(n)+i.GAP_SIZE,i.BLOCK_SIZE-2*i.GAP_SIZE,i.BLOCK_SIZE-2*i.GAP_SIZE)},u=function(){function t(){var t=document.getElementById(i.DOM_ELEMENT_IDS.CANVAS_ELEMENT);if(!t)throw Error("Canvas element is not found");this.renderingContext=t.getContext("2d")}return t.prototype.render=function(){for(var t,e,r,o,i=[],a=0;a<arguments.length;a++)i[a]=arguments[a];this.clear();try{for(var u=n(i),l=u.next();!l.done;l=u.next()){var c=l.value;try{for(var f=(r=void 0,n(c.getElements())),y=f.next();!y.done;y=f.next()){var h=y.value;s(this.renderingContext,h)}}catch(t){r={error:t}}finally{try{y&&!y.done&&(o=f.return)&&o.call(f)}finally{if(r)throw r.error}}}}catch(e){t={error:e}}finally{try{l&&!l.done&&(e=u.return)&&e.call(u)}finally{if(t)throw t.error}}},t.prototype.clear=function(){this.renderingContext.clearRect(0,0,a(i.BOARD_SIZES.width),a(i.BOARD_SIZES.height))},t}();e.getRenderer=function(){return o||(o=new u),o}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,